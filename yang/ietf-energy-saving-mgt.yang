module ietf-energy-saving-mgt {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-energy-saving-mgt";
  prefix em;

  import ietf-network-inventory {
    prefix ni;
    reference
      "RFC IIII: A YANG Data Model for Network Inventory";
  }
  import iana-hardware {
    prefix ianahw;
     reference
      "https://www.iana.org/assignments/iana-hardware/iana-hardware.xhtml";
  }
  import ietf-yang-types {
    prefix yang;
	  reference
	   "RFC6021: Common YANG Types";
  }
  import ietf-network {
    prefix nw;
    reference
       "RFC 8345: A YANG Data Model for Network Topologies";
   }
   
  organization
    "IETF IVY Working Group.";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/opsawg/>;
     WG List:  <mailto:opsawg@ietf.org>
     Author:   Gen Chen  <mailto:chengen@huawei.com>
     Author:   Qin Wu <mailto:bill.wu@huawei.com>
     Author:   Mohamed Boucadair <mailto:mohamed.boucadair@huawei.com>";
     
  description
    "This module contains a collection of YANG definitions for power
     and energy management of devices.";

  revision 2024-01-23 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: A YANG Data Model for Energy Saving Management";
  }

  identity channel {
    base ianahw:hardware-class;
    description
      "This identity is applicable if the hardware class is some sort
       of networking channel capable of receiving and/or transmitting
       networking traffic.";
  }

  identity energy-saving-mode {
   description
   "Base identity for energy saving mode.";
  }
  identity basic {
   base energy-saving-mode;
   description
      "Basic energy saving mode. In this mode, the system
      will shut down idle modules and put them in sleep mode.";
  }
  identity standard {
   base energy-saving-mode;
   description
      "Standard energy saving mode. In this mode, the system
       will extend basic energy saving mode with more advanced
       Lossless energy saving features, e.g., power module
       schedule.";
  }
  identity deep {
   base energy-saving-mode;
   description
      "Deep energy saving mode.  In this mode, the system
       will extend standard engery saving mode with more advanced
       system level engergy saving features, e.g., board
       scheduling.";
  }
  identity energy-saving-method {
   description
   "Base identity for energy saving method.";
  }
  identity zone-based-fan-speed-adjustment {
   base energy-saving-method;
   description
      "The system will collect information about the
       temperatures of the service boards in the chassis
       and the zones where the service boards reside.
       According to the current temperature and target
       temperature of each board, the system implements
       stepless speed adjustment in different zones.";
  }
  identity unused-high-speed-interface-shutdown {
   base energy-saving-method;
   description
      "When detecting an unused high-speed interface, the
       system automatically or manually shuts down the
       interface to reduce power consumption of the interface
       circuits. When the interface needs to run service, the
       system will automatically wake up the interface and
       restore the interface to the normal working state.";
  }
  identity unused-port-shutdown {
   base energy-saving-method;
   description
      "When detecting an unused user port, the system automatically
       or manually shuts down the interface circuits and optical
       module of the port to reduce port power consumption. When
       detecting that the port needs to run service, the system
       automatically enables the port and restores the port to the
       normal running state, without affecting application of the
       board.";
  }
  identity unused-board-shutdown {
   base energy-saving-method;
   description
      "When detecting an unused board, the system automatically
       shuts down the power supply of the board,ensuring zero
       power consumption of an unused board. When detecting that
       the board needs to run service,the system automatically
       powers on the board and restores the board to the normal
       running state, without affecting application of the whole
       product.";
  }
 identity dynamic-frequency-adjustment {
   base energy-saving-method;
   description
      "When detecting that a service board is carrying a small
       service load, the system automatically reduces the working
       frequency of the service processing module of the board
       while maintaining the service quality. In this way, power
       consumption of the service processing module is reduced.
       When the service load of the board increases, the system
       automatically increases the working frequency of the service
       processing module to meet service needs.";
  }
 identity unused-channel-shutdown {
   base energy-saving-method;
   description
      "When an unused channel is detected, the unused channel is
       closed. Dynamically open the channel when detecting that
       there are services on the channel.";
  }
 identity intelligent-power-module-scheduling {
   base energy-saving-method;
   description
      "Power modules intelligently schedule internal power supply
       based on the power load. When the power load decreases,
       some power supply are automatically disabled.
       When the power load increases, the disabled power supply
       are enabled again. ";
  }
 identity intelligent-board-scheduling {
   base energy-saving-method;
   description
      "Boards intelligently schedule internal forwarding resources
       based on the service load. When the service load decreases,
       some forwarding resources are automatically disabled or the
       working frequency of the forwarding resources is reduced.
       When the service load increases, the disabled forwarding
       resources are enabled again or the working frequency of
       forwarding resources is improved. In the case of burst
       traffic, packet forwarding may be delayed, but packets
       will not be lost.";
  }

  identity energy-saving-oper-state {
   description
   "Base identity for energy-saving-oper-state.";
  }
  identity energy-saving {
   base energy-saving-oper-state;
   description
      "Indicates that the device supports energy-saving mode.";
  }
  identity energy-none-saving {
   base energy-saving-oper-state;
   description
      "Indicates that the device does not support energy-saving
       mode or does not have enough resources.";
  }
  identity energy-saving-deactivated {
   base energy-saving-oper-state;
   description
      "Indicates that the device in no energy-saving status.";
  }
  identity energy-saving-activated {
   base energy-saving-oper-state;
   description
      "Indicates that the device in energy-saving running status.";
  }

  typedef energy-saving-operator {
    type enumeration {
      enum power-on {
        value 1;
        description "Power-on for energy saving.";
      }

      enum power-off {
        value 2;
        description "Power-off for energy saving.";
      }
    }
    description "Energy saving operator.";
  }

  grouping energy-consumption-data{
    leaf average-power {
      type yang:gauge64;
      units "mW";
      description
        "The average power of monitoring class.";
    }
    leaf saved-power {
      type yang:gauge64;
      units "mW";
      description "The saved power of monitoring class.";
    }
    leaf current-power {
      type yang:gauge64;
      units "mW";
      description "The current power of monitoring class.";
    }

    leaf current-volts {
      type int32;
      units "mV";
      description
        "The current volts of monitoring class.";
    }
    leaf current-amperes {
      type int32;
      units "mA";
      description
        "The current amperes of monitoring class.";
    }
    leaf temperature {
      type int32;
      units "0.01 C";
      description "The current temperature of the component.";
    }
    description
      "Statistics of the energy monitoring.";
  }
  
   container component-energy-monitoring {
    description "Energy monitoring data for components.";
    container energy-consumption {
      config false;
      description
        "Statistics of component about energy monitoring.";
      uses energy-consumption-data;
    }
    container energy-saving {
      description "Configure : Statistics of component about
                   energy monitoring.";
      leaf enabled {
        type boolean;
          default "true";
        description "Enable/disable : the energy-saving state
                     of the component.";
      }

      leaf oper-state {
        type identityref {
		base energy-saving-oper-state;
		}
        config false;
        description "The device energy saving operator state.";
      }
    }
	leaf inventory-component-ref {
       type leafref {
         path "/ni:network-elements/ni:network-element/"
            + "ni:components/ni:component/ni:name";
         }
        config false;
        description
           "The reference of the port component from which this
            termination point is abstracted.";
    }
  }
  augment "/nw:networks/nw:network/nw:node"
   {
   description "Energy monitoring data for network element.";
   container energy-power-consumption {
      config false;
      description
        "Statistics data about energy and power monitoring.";
	leaf total-energy-consumption {
      type uint64;
      units "Wh";
      description
        "Accumulated energy consumption of equipment.";
    }
    leaf saved-energy {
      type uint64;
      units "Wh";
      description
        "Saved energy consumption of equipment.";
    }
	leaf eer {
       type decimal64 {
         fraction-digits 18;
       }
      units "Gbps/Watt";
      description "The energy efficiency rating (EER) is a metric
      generally defined as a functional unit divided by the energy
      used. Various types of equipment have their own EER definitions.";
     }
    }
  }
  augment "/ni:network-elements/ni:network-element" {
  container energy-management {
    description
      "Statistics of the energy management.";
      leaf energy-monitoring-capability {
        config false;
        type boolean;
        description
          "Indicates whether monitoring can be performed.";
      }

      container energy-saving-modes {
        description "List of the energy saving mode.";
        list energy-saving-mode {
          key mode;
          leaf mode {
            type identityref {
			base energy-saving-mode;
			}
            description "The energy saving mode.";
          }
          container methods {
            description "List of the energy saving method.";
            list method {
              key method-name;
              leaf method-name {
                type identityref {
				base energy-saving-method;
				}
                description "The energy saving method name.";
              }
              description "Configuration of the energy saving method.";
            }
          }
          description "Configure the energy saving mode.";
        }
      }
  }
 }
 
  augment "/ni:network-elements/ni:network-element/ni:components/ni:component"
   {
    description "Energy management static data for components.";
	leaf temperature-upper-bound {
      type int32;
      units "0.01 C";
      description 
	     "The upper bound overheat temperature of the component. 
		 Upon the upper bound is exceeded, the alarm will be triggered
		 to indicate fatal failure.";
    }
    leaf temperature-middle-bound {
      type int32;
      units "0.01 C";
      description 
	    "The middle bound overheat temperature of the component. 
		 Upon the middle bound is exceeded, the alarm will be 
		 triggered.";
    }
	leaf temperature-lower-bound {
      type int32;
      units "0.01 C";
      description 
	     "The lower bound overheat temperature of the component. 
		 Upon the lower bound is exceeded, the alarm will be 
		 triggered.";
    }
	leaf rated-power {
      type yang:gauge64;
      units "mW";
      description "The rated power of monitoring class.";
    }
	leaf expected-volts {
      type int32;
      units "mV";
      description
        "The expected volts of monitoring class.";
    }
    leaf low-volts-bound {
      type int32;
      units "mV";
      description
        "The lower volts bound of monitoring class which
		might cause equipment abnormality or damage.";
    }
	leaf low-volts-fatal {
      type int32;
      units "mV";
      description
        "The lowest volts bound of monitoring class which
		might cause equipment fatal damage.";
    }
	leaf high-volts-bound {
      type int32;
      units "mV";
      description
        "The higher volts bound of monitoring class which
		will trigger alarm.";
    }
    leaf high-volts-fatal {
      type int32;
      units "mV";
      description
        "The highest volts bound of monitoring class which
		will cause fatal failure.";
    }
   }
}